{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from \"@capacitor/core\";\n\nexport interface ScreenEventsPlugin {\n  echo(options: { value: string }): Promise<{ value: string }>;\n\n  /**\n  * Checks if screen is on\n  *\n  * @since 0.0.1\n  */\n  isScreenOn(): Promise<{ result: boolean }>;\n\n  getUsageStats(options: {startTime: number, endTime: number}): Promise<{ result: string; }>;\n\n  getUsageEvents(options: {startTime: number, endTime: number}): Promise<{ result: string; }>;\n  \n  addListener(eventName: 'screenOn' | 'screenOff', listenerFunc: () => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n  checkPermissions(): Promise<{ result: boolean }>;\n}\n"]}