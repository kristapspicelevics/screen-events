{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,eAAgB,SAAQ,SAAS;IAE5C,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,UAAU;QACd,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAA6C;QAC/D,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,iBAAiB;QACjB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,OAA6C;QAChE,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,iBAAiB;QACjB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CAEF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { ScreenEventsPlugin } from './definitions';\n\nexport class ScreenEventsWeb extends WebPlugin implements ScreenEventsPlugin {\n\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n  \n  async isScreenOn(): Promise<{ result: boolean; }> {\n    throw new Error('Method not implemented.');\n  }\n\n  async getUsageStats(options: {startTime: number, endTime: number}): Promise<{ result: string; }> {\n    console.log('ECHO', options);\n    //return options;\n    throw new Error('Method not implemented.');\n  }\n\n  async getUsageEvents(options: {startTime: number, endTime: number}): Promise<{ result: string; }> {\n    console.log('ECHO', options);\n    //return options;\n    throw new Error('Method not implemented.');\n  }\n\n}\n"]}